stages:
  - build
  - versioning
  - deploy

messages_ui_build_push_registry:
  stage: build
  variables:
    PROJECT_SUBNAME: "messages-ui"
  before_script:
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $REGISTRY
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $DOCKER_PROXY
    - docker login -u "$PROD_REGISTRY_USER" -p "$PROD_REGISTRY_PASSWORD" $PROD_REGISTRY
  script:
    - if [[ $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "test" ]]; then IMAGE_NAME_WITH_TAG="$PROD_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$PROJECT_SUBNAME:$CI_COMMIT_BRANCH"; else IMAGE_NAME_WITH_TAG="$REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$PROJECT_SUBNAME:$CI_COMMIT_BRANCH"; fi
    - echo $IMAGE_NAME_WITH_TAG
    
    - docker build --pull -t "$IMAGE_NAME_WITH_TAG" -f ./messages-web/Dockerfile ./messages-web
    - docker push "$IMAGE_NAME_WITH_TAG"
    - docker rmi "$IMAGE_NAME_WITH_TAG" -f
  only:
    - develop
    - test
    - master
  tags:
    - artifactory_eip_rkp


gateway_api_build_push_registry:
  stage: build
  variables:
    PROJECT_SUBNAME: "gateway-api"
  before_script:
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $REGISTRY
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $DOCKER_PROXY
    - docker login -u "$PROD_REGISTRY_USER" -p "$PROD_REGISTRY_PASSWORD" $PROD_REGISTRY
  script:
    - if [[ $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "test" ]]; then IMAGE_NAME_WITH_TAG="$PROD_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$PROJECT_SUBNAME:$CI_COMMIT_BRANCH"; else IMAGE_NAME_WITH_TAG="$REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$PROJECT_SUBNAME:$CI_COMMIT_BRANCH"; fi
    - echo $IMAGE_NAME_WITH_TAG
    
    - docker build --pull -t "$IMAGE_NAME_WITH_TAG" -f ./Rk.Messages.Spa/Dockerfile .
    - docker push "$IMAGE_NAME_WITH_TAG"
    - docker rmi "$IMAGE_NAME_WITH_TAG" -f
  only:
    - develop
    - test
    - master
  tags:
    - artifactory_eip_rkp


file_store_api_push_registry:
  stage: build
  variables:
    PROJECT_SUBNAME: "file-store-api"
  before_script:
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $REGISTRY
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $DOCKER_PROXY
    - docker login -u "$PROD_REGISTRY_USER" -p "$PROD_REGISTRY_PASSWORD" $PROD_REGISTRY
  script:
    - if [[ $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "test" ]]; then IMAGE_NAME_WITH_TAG="$PROD_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$PROJECT_SUBNAME:$CI_COMMIT_BRANCH"; else IMAGE_NAME_WITH_TAG="$REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$PROJECT_SUBNAME:$CI_COMMIT_BRANCH"; fi
    - echo $IMAGE_NAME_WITH_TAG
    
    - docker build --pull -t "$IMAGE_NAME_WITH_TAG" -f ./Services/FileStore/Rk.FileStore.Webapi/Dockerfile .
    - docker push "$IMAGE_NAME_WITH_TAG"
    - docker rmi "$IMAGE_NAME_WITH_TAG" -f
  only:
    - develop
    - test
    - master
  tags:
    - artifactory_eip_rkp


messages_api_build_push_registry:
  stage: build
  variables:
    PROJECT_SUBNAME: "messages-api"
  before_script:
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $REGISTRY
    - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASSWORD" $DOCKER_PROXY
    - docker login -u "$PROD_REGISTRY_USER" -p "$PROD_REGISTRY_PASSWORD" $PROD_REGISTRY
  script:
    - if [[ $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "test" ]]; then IMAGE_NAME_WITH_TAG="$PROD_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$PROJECT_SUBNAME:$CI_COMMIT_BRANCH"; else IMAGE_NAME_WITH_TAG="$REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME/$PROJECT_SUBNAME:$CI_COMMIT_BRANCH"; fi
    - echo $IMAGE_NAME_WITH_TAG
    
    - docker build --pull -t "$IMAGE_NAME_WITH_TAG" -f ./Services/Messages/Rk.Messages.Webapi/Dockerfile .
    - docker push "$IMAGE_NAME_WITH_TAG"
    - docker rmi "$IMAGE_NAME_WITH_TAG" -f
  only:
    - develop
    - test
    - master
  tags:
    - artifactory_eip_rkp

versioning:
  image: registry.dev.roscosmos.digital/versioning/gitlab-semantic-release:latest  
  stage: versioning
  variables:
    GITLAB_TOKEN: "$AUTOVERSIONING"
  script:
    - env
    - npx semantic-release
  only:
    - develop
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TITLE =~ /^RELEASE:.+$/


deploy_marketplace:
  stage: deploy
  script:
    - export ANSIBLE_HOST_KEY_CHECKING=False
    - ansible-playbook -i ansible/inventory.ini ansible/playbook.yml -e "ansible_password=$ANSIBLE_DEVOPS_PASSWORD ansible_sudo_pass=$ANSIBLE_DEVOPS_PASSWORD"
  only:
    - develop
    - test
    - master
  tags:
    - ansible

