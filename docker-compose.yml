version: '3.4'

services:
  # account-service-api:
  #   image: registry.dev.roscosmos.digital/templates/net-core-messages/account-service-api:develop
  #   hostname: "account-service-api"
  #   restart: always
  #   ports:
  #     - 5300:5000
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: ${STAGE_ENV}

  # messages-ui:
  #   image: registry.dev.roscosmos.digital/templates/net-core-messages/messages-ui:develop
  #   hostname: "messages-ui"
  #   restart: always
  #   ports:
  #     - 80:80
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: ${STAGE_ENV}


  # gateway-api:
  #   image: registry.dev.roscosmos.digital/templates/net-core-messages/gateway-api:develop
  #   hostname: "gateway-api"
  #   restart: always
  #   ports:
  #     - 5000:5000
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: ${STAGE_ENV}


  # messages-api:
  #   image: registry.dev.roscosmos.digital/templates/net-core-messages/messages-api:develop
  #   hostname: "messages-api"
  #   restart: always
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: ${STAGE_ENV}


  # file-store-api:
  #   image: registry.dev.roscosmos.digital/templates/net-core-messages/file-store-api:develop
  #   hostname: "file-store-api"
  #   restart: always
  #   environment:
  #     ASPNETCORE_ENVIRONMENT: ${STAGE_ENV}


  # es01:
  #   image: docker-proxy.dev.roscosmos.digital/elastic/elasticsearch:7.10.1
  #   container_name: es01
  #   hostname: "es01"
  #   environment:
  #     - xpack.security.enabled=false
  #     - discovery.type=single-node
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - data01:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200

  # kib01:
  #   image: docker-proxy.dev.roscosmos.digital/elastic/kibana:7.10.1
  #   container_name: kib01
  #   hostname: "kib01"
  #   ports:
  #     - 5601:5601
  #   environment:
  #     ELASTICSEARCH_URL: http://es01:9200
  #     ELASTICSEARCH_HOSTS: http://es01:9200


  zookeeper:
    image: wurstmeister/zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka_broker1:
    image: wurstmeister/kafka
    hostname: broker1
    container_name: broker1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  clickhouse:
    image: yandex/clickhouse-server
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9009:9009"
    volumes:
      - ./deploy/scripts:/docker-entrypoint-initdb.d
  # db:
  #   image: docker-proxy.dev.roscosmos.digital/postgres:14.2
  #   volumes:
  #     - db_data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_PASSWORD: "123456"
  #   ports:
  #     - 5432:5432


volumes:
  data01:
    driver: local
  db_data:
    driver: local
