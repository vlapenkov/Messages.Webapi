// <auto-generated />
using System;
using Messages.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Messages.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221011151101_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Messages.Domain.Models.AttributeValue", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("AttributeId")
                        .HasColumnType("bigint")
                        .HasColumnName("attributeid");

                    b.Property<long>("BaseProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("baseproductid");

                    b.Property<string>("Value")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_attributevalues");

                    b.HasIndex("AttributeId")
                        .HasDatabaseName("ix_attributevalues_attributeid");

                    b.HasIndex("BaseProductId")
                        .HasDatabaseName("ix_attributevalues_baseproductid");

                    b.ToTable("attributevalues");
                });

            modelBuilder.Entity("Messages.Domain.Models.CatalogSection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("name");

                    b.Property<long?>("ParentCatalogSectionId")
                        .HasColumnType("bigint")
                        .HasColumnName("parentcatalogsectionid");

                    b.HasKey("Id")
                        .HasName("pk_catalogsection");

                    b.HasIndex("ParentCatalogSectionId")
                        .HasDatabaseName("ix_catalogsection_parentcatalogsectionid");

                    b.ToTable("catalogsection");
                });

            modelBuilder.Entity("Messages.Domain.Models.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FullName")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("fullname");

                    b.Property<string>("Inn")
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("inn");

                    b.Property<string>("Kpp")
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)")
                        .HasColumnName("kpp");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("name");

                    b.Property<string>("Ogrn")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("ogrn");

                    b.HasKey("Id")
                        .HasName("pk_organizations");

                    b.ToTable("organizations");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FullName = "Ракетно-космический центр «Прогресс», Самара",
                            Inn = "6312139922",
                            Kpp = "631201001",
                            Name = "Прогресс",
                            Ogrn = "1146312005344"
                        });
                });

            modelBuilder.Entity("Messages.Domain.Models.ProductAttribute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_attributes");

                    b.ToTable("attributes");
                });

            modelBuilder.Entity("Messages.Domain.Models.Products.BaseProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("CatalogSectionId")
                        .HasColumnType("bigint")
                        .HasColumnName("catalogsectionid");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("description");

                    b.Property<int>("ItemType")
                        .HasColumnType("integer")
                        .HasColumnName("itemtype");

                    b.Property<string>("Name")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_baseproduct");

                    b.HasIndex("CatalogSectionId")
                        .HasDatabaseName("ix_baseproduct_catalogsectionid");

                    b.ToTable("baseproduct");

                    b.HasDiscriminator<int>("ItemType");
                });

            modelBuilder.Entity("Messages.Domain.Models.Products.Product", b =>
                {
                    b.HasBaseType("Messages.Domain.Models.Products.BaseProduct");

                    b.Property<string>("CodeTnVed")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("codetnved");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Messages.Domain.Models.Products.ServiceProduct", b =>
                {
                    b.HasBaseType("Messages.Domain.Models.Products.BaseProduct");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Messages.Domain.Models.Products.Technology", b =>
                {
                    b.HasBaseType("Messages.Domain.Models.Products.BaseProduct");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("Messages.Domain.Models.AttributeValue", b =>
                {
                    b.HasOne("Messages.Domain.Models.ProductAttribute", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .HasConstraintName("fk_attributevalues_attributes_attributeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Messages.Domain.Models.Products.BaseProduct", "BaseProduct")
                        .WithMany("AttributeValues")
                        .HasForeignKey("BaseProductId")
                        .HasConstraintName("fk_attributevalues_baseproduct_baseproductid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attribute");

                    b.Navigation("BaseProduct");
                });

            modelBuilder.Entity("Messages.Domain.Models.CatalogSection", b =>
                {
                    b.HasOne("Messages.Domain.Models.CatalogSection", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentCatalogSectionId")
                        .HasConstraintName("fk_catalogsection_catalogsection_catalogsectionid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Messages.Domain.Models.Products.BaseProduct", b =>
                {
                    b.HasOne("Messages.Domain.Models.CatalogSection", "CatalogSection")
                        .WithMany("Products")
                        .HasForeignKey("CatalogSectionId")
                        .HasConstraintName("fk_baseproduct_catalogsection_catalogsectionid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatalogSection");
                });

            modelBuilder.Entity("Messages.Domain.Models.CatalogSection", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Messages.Domain.Models.Products.BaseProduct", b =>
                {
                    b.Navigation("AttributeValues");
                });
#pragma warning restore 612, 618
        }
    }
}
